/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frmEmpleado;

import MantenedorEmpleado.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import Class.UsuarioInfo;
import Main.Login;
import javax.swing.JOptionPane;
/**
 *
 * @author Daniel
 */
public class frmAsignacionEmpleado extends javax.swing.JFrame {
     private UsuarioInfo usuarioInfo;
    /**
     * Creates new form frmAsignacionEmpleado
     */
    public frmAsignacionEmpleado() {
        initComponents();
        cargarDatosEmpleados();
         this.setLocationRelativeTo(null);
         Login login = new Login();
       lblUsuario.setText(login.Usuario);
       
    }

    private void actualizarAvance(String nuevoAvance) {
        try {
        int filaSeleccionada = tblEmpleado.getSelectedRow();

        if (filaSeleccionada != -1) {
            Object valor = tblEmpleado.getValueAt(filaSeleccionada, 1);

            if (valor != null) {
                Connection con = Conexion.getConexion();
                String updateQuery = "UPDATE Planificacion SET Avance = ? " +
                        "WHERE NumEmpleado = (SELECT NumEmpleado FROM usuario WHERE Id = ?) " +
                        "AND NumOrden = ?";
                PreparedStatement pstmt = con.prepareStatement(updateQuery);

                // Obtener el número de orden y ID del usuario actual
                String numOrden = valor.toString();
                String idUsuario = lblUsuario.getText(); // Obtener el texto del JLabel

                pstmt.setString(1, nuevoAvance);
                pstmt.setString(2, idUsuario);
                pstmt.setString(3, numOrden);

                pstmt.executeUpdate();

                pstmt.close();
                con.close();
            } else {
                System.out.println("El valor en la columna 1 es null.");
            }
        } else {
            System.out.println("No hay fila seleccionada.");
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
    }
    
    private void actualizarBarraProgreso() {
       try {
        // Obtener la fila seleccionada
        int filaSeleccionada = tblEmpleado.getSelectedRow();
        String porcentaje ="" ;
        // Verificar que haya una fila seleccionada y que la columna 4 no sea nula
        if (filaSeleccionada != -1 && tblEmpleado.getValueAt(filaSeleccionada, 4) != null) {
            // Obtener el avance y la cantidad seleccionada desde la tabla
            String avanceStr = tblEmpleado.getValueAt(filaSeleccionada, 4).toString();
            double avance = Double.parseDouble(avanceStr);

            // Verificar que el avance sea un número válido
            if (!avanceStr.isEmpty()) {
                // Obtener la cantidad seleccionada desde la tabla
                int cantidadSeleccionada = Integer.parseInt(tblEmpleado.getValueAt(filaSeleccionada, 5).toString());

                // Calcular el porcentaje de avance en relación con la cantidad seleccionada
                 porcentaje = porcentaje + (int) ((avance / cantidadSeleccionada) * 100);

                // Actualizar la barra de progreso
                jpbProgreso.setValue(Integer.parseInt(porcentaje));
            }
        }
    } catch (NumberFormatException | ArithmeticException ex) {
        // Manejar errores de formato o división por cero si es necesario
        ex.printStackTrace();
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpleado = new javax.swing.JTable();
        cmdVolver = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jpbProgreso = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmdAvanceIngreso = new javax.swing.JButton();
        txtAvance = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblEmpleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "NumOrden", "NumTarea", "Descripcion", "Avance", "Cantidad Seleccionada"
            }
        ));
        jScrollPane1.setViewportView(tblEmpleado);
        if (tblEmpleado.getColumnModel().getColumnCount() > 0) {
            tblEmpleado.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        cmdVolver.setBackground(new java.awt.Color(0, 0, 0));
        cmdVolver.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        cmdVolver.setForeground(new java.awt.Color(255, 255, 255));
        cmdVolver.setText("Volver");
        cmdVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdVolverActionPerformed(evt);
            }
        });

        jPanel2.setBackground(java.awt.Color.lightGray);

        jLabel1.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel1.setText("Progreso");

        jLabel2.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        jLabel2.setText("Avance de Tarea");

        cmdAvanceIngreso.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        cmdAvanceIngreso.setText("Ingreso");
        cmdAvanceIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAvanceIngresoActionPerformed(evt);
            }
        });

        txtAvance.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpbProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdAvanceIngreso)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtAvance, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel2)
                .addGap(9, 9, 9)
                .addComponent(txtAvance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdAvanceIngreso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jpbProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );

        jLabel3.setText("Usuario");

        lblUsuario.setText("Usuario");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblUsuario)
                                .addGap(0, 609, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane1)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(cmdVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void cargarDatosEmpleados() {
        DefaultTableModel modelo = new DefaultTableModel();
    modelo.addColumn("NombreEmpleado"); 
    modelo.addColumn("NumOrden");
    modelo.addColumn("NumTarea");
    modelo.addColumn("Descripcion");
    modelo.addColumn("Avance");
    modelo.addColumn("Cantidad Seleccionada");

    // Obtener el usuario actual
    Login login = new Login();
    String nombreUsuario = login.Usuario;

    // Modificar la consulta para filtrar por el usuario actual
    String consulta = "SELECT e.Nombre, p.NumOrden, p.NumTarea, t.Descripcion AS DescripcionTarea, p.Avance, ot.Cantidad AS CantidadSeleccionada " +
                      "FROM Planificacion p " +
                      "INNER JOIN Empleado e ON p.NumEmpleado = e.NumEmpleado " +
                      "INNER JOIN Tarea t ON p.NumTarea = t.NumTarea " +
                      "INNER JOIN OrdenTrabajo ot ON p.NumOrden = ot.NumOrden " +
                      "INNER JOIN usuario u ON e.RutUsuario = u.Rut_Usuario " +
                      "WHERE u.Id = ?";

    try {
        Connection con = Conexion.getConexion();
        PreparedStatement pstmt = con.prepareStatement(consulta);

        // Establecer el valor del parámetro (usuario actual)
        pstmt.setString(1, nombreUsuario);

        ResultSet rs = pstmt.executeQuery();

        while (rs.next()) {
            Vector fila = new Vector();
            fila.add(rs.getString("Nombre")); 
            fila.add(rs.getInt("NumOrden"));
            fila.add(rs.getString("NumTarea"));                  
            fila.add(rs.getString("DescripcionTarea"));
            fila.add(rs.getString("Avance"));
            fila.add(rs.getString("CantidadSeleccionada"));
            modelo.addRow(fila);
        }

        tblEmpleado.setModel(modelo);

        rs.close();
        pstmt.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
    }

    
    private void cmdVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdVolverActionPerformed
        frmEmplados empleado = new frmEmplados();
        empleado.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cmdVolverActionPerformed

    private void cmdAvanceIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAvanceIngresoActionPerformed
     try {
        // Obtener la fila seleccionada
        int filaSeleccionada = tblEmpleado.getSelectedRow();

        // Verificar que haya una fila seleccionada
        if (filaSeleccionada != -1) {
            // Obtener el valor de avance desde txtAvance
            String avanceStr = txtAvance.getText();

            // Validar que el avance sea un número válido
            double avance = Double.parseDouble(avanceStr);

            // Obtener la cantidad seleccionada desde la tabla
            int cantidadSeleccionada = Integer.parseInt(tblEmpleado.getValueAt(filaSeleccionada, 5).toString());

            // Validar que el avance esté dentro de un rango válido (0 a cantidadSeleccionada)
            if (avance < 0 || avance > cantidadSeleccionada) {
                JOptionPane.showMessageDialog(this, "Ingrese un avance válido (entre 0 y " + cantidadSeleccionada + ")", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Actualizar la base de datos con el nuevo valor de avance
            actualizarAvance(avanceStr);

            // Actualizar la barra de progreso
            actualizarBarraProgreso();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila antes de ingresar el avance.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException ex) {
        // Manejar error si el valor ingresado no es un número válido
        JOptionPane.showMessageDialog(this, "Ingrese un número válido para el avance.", "Error", JOptionPane.ERROR_MESSAGE);
    }
     cargarDatosEmpleados();
    }//GEN-LAST:event_cmdAvanceIngresoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAsignacionEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAsignacionEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAsignacionEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAsignacionEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAsignacionEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAvanceIngreso;
    private javax.swing.JButton cmdVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar jpbProgreso;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTable tblEmpleado;
    private javax.swing.JTextField txtAvance;
    // End of variables declaration//GEN-END:variables
}
